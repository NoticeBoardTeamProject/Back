name: Deploy to VM

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

concurrency:
  group: deploy-prod
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script_stop: true
          script: |
            set -uo pipefail

            APP_DIR="${{ secrets.APP_DIR }}"
            REPO_URL="https://github.com/${{ github.repository }}.git"
            BRANCH="main"

            sudo mkdir -p "$APP_DIR"
            sudo chown -R "$USER:$USER" "$APP_DIR"

            TMP_DIR="$(mktemp -d)"
            git clone --depth=1 --branch "$BRANCH" "$REPO_URL" "$TMP_DIR"

            rsync -a --delete \
              --exclude '.git' \
              --exclude 'certbot/conf/**' \
              --exclude 'bulletin_board.db' \
              "$TMP_DIR"/ "$APP_DIR"/

            rm -rf "$TMP_DIR"

            printf "%s" "${{ secrets.APP_ENV }}" > "$APP_DIR/.env"
            chmod 600 "$APP_DIR/.env"

            cd "$APP_DIR"

            docker-compose pull || true
            docker-compose build --pull
            docker-compose up -d

            docker-compose ps
